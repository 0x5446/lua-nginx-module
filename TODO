Current:
	* add directives to run lua codes when nginx stops/reloads
	* implement ngx.exec() functionality
	* deal with TCP 3-second delay problem under great connection harness

Future:
	* add 'lua_require' directive to load module into main thread's globals
	* add Lua VM passive yield and resume (using debug hook)
	* make set_by_lua using the same mechanism as content_by_lua
	* integrate $request_body reading functionality

Drawbacks:
	* Globals won't persist between requests, due to the one-coroutine-per-request designing. Especially watch yourself when using require() to import modules, use this form:

		local xxx = require('xxx')
	
	instead of the old deprecated form:

		require('xxx')

	The old form will cause module unusable in requests for the reason told previously. If you have to stick with the old form, you can always force loading module for every request by clean package.loaded.<module>, like this:

		package.loaded.xxx = nil
		require('xxx')

